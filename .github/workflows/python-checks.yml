# This workflow will install dependencies and run tests using Python tox.
# The version matrix of Python and various libraries tested (Python vs Django, for instance)
# is entirely managed by tox and so no strategy section is required within any test jobs.

name: Linting and testing

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  lint:
    name: Lint and format

    runs-on: ubuntu-latest

    env:
      # Choose a version of Python in which to set up the tox test environment.
      python-version: "3.10"
      linted-dirs: src tests
      # TODO: also lint demo once once formatting issues have been fixed.
      #linted-dirs: demo src tests

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ env.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install black flake8 isort

    - name: Run lints
      run: |
        flake8 ${{ env.linted-dirs }}
        black --check ${{ env.linted-dirs }}
        isort --check ${{ env.linted-dirs }}

  test:
    name: Unit tests

    runs-on: ubuntu-latest

    env:
      # Choose a version of Python in which to set up the tox test environment.
      python-version: "3.10"

    # No strategy is required to manage our Python x Django version matrix of
    # tests - tox manages this.
    #strategy:
    #  matrix:
    #    python-version: [3.9]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ env.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install tox
        python -m pip install -r requirements/tests.txt

    - name: Run tox
      run: tox
